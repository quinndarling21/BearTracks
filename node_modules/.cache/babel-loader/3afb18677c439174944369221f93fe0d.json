{"ast":null,"code":"var _jsxFileName = \"/Users/quinndarling/Desktop/beartracks-1.0/src/Components/CategoryListComponent/CategoryList.js\";\nimport React, { Component } from 'react';\nimport DivisionList from '../DivisionListComponent/DivisionList';\nimport user from '../../UserPlans/User';\nimport { Dropdown } from 'react-bootstrap';\nimport { ProgressBar } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\n\nfunction getSum(total, num) {\n  return total + Math.round(num);\n}\n\nfunction isArray(value) {\n  return value && typeof value === 'object' && value.constructor === Array;\n}\n\nfunction getCoursesFromSemesters(semesters) {\n  var courseLists = [];\n\n  for (let i = 0; i < semesters.length; i++) {\n    courseLists.push(semesters[i][1]);\n  }\n\n  return [].concat.apply([], courseLists);\n}\n\nclass CategoryList extends Component {\n  constructor(props) {\n    super(props); //the following categories are guaranteed for every user\n    //need to add in university later \n\n    this.state = {\n      selectedCategory: this.props.categories[0],\n      selectedCatNum: 0,\n      categories: this.props.categories,\n      dataArray: this.props.data,\n      show: false,\n      selectedPlan: this.props.selectedPlan,\n      progress: this.props.selectedPlan.totalProgress()\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.toggleDropdown = this.toggleDropdown.bind(this);\n    this.componentWillReceiveProps = this.componentWillReceiveProps.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.state.selectedPlan !== nextProps.selectedPlan || this.state.categories[this.state.selectedCatNum] !== nextProps.categories[this.state.selectedCatNum]) {\n      this.setState({\n        selectedCategory: nextProps.categories[0],\n        selectedCatNum: 0\n      });\n    }\n\n    this.setState({\n      selectedPlan: nextProps.selectedPlan,\n      progress: nextProps.selectedPlan['totalProgress'](),\n      categories: nextProps.categories,\n      dataArray: nextProps.data\n    });\n  }\n\n  handleClick(i) {\n    //Called when a category is selected from the dropdown menu\n    this.setState({\n      selectedCategory: i,\n      selectedCatNum: this.state.categories.indexOf(i),\n      show: true\n    });\n  }\n\n  updateProgressBar() {\n    var temp = this.state.selectedPlan.totalProgress();\n    this.setState({\n      progress: temp\n    });\n  }\n\n  toggleDropdown() {\n    this.setState({\n      show: !this.state.show\n    });\n  }\n\n  findCategoryProgress(category, num) {\n    var numUnits = 0;\n    var numCompletedUnits = 0;\n    var requirements = this.state.dataArray[num][category]['Requirements'];\n\n    for (var i = 0; i < requirements.length; i++) {\n      var completed = [];\n\n      for (let k = 0; k < this.state.selectedPlan.autoCompleted.length; k++) {\n        if (this.state.selectedPlan.autoCompleted[k][0] === category && this.state.selectedPlan.autoCompleted[k][1] === requirements[i]['Requirement']) {\n          completed.push('true');\n        }\n      }\n\n      if (completed.length === 0) {\n        var numCompletedUnits = numCompletedUnits + this.findUnitsTakeninRequirement(requirements[i]);\n      } else {\n        var numCompletedUnits = numCompletedUnits + requirements[i]['Minimum Units'];\n      }\n\n      numUnits += requirements[i]['Minimum Units'];\n    }\n\n    return Math.floor(numCompletedUnits / numUnits * 100);\n  }\n\n  findUnitsTakeninRequirement(requirement) {\n    let userCourses = getCoursesFromSemesters(this.state.selectedPlan.semesters);\n    let unitsTaken = 0;\n    var courses = requirement['Course'];\n\n    if (courses[0] !== 'departmentsubgroup') {\n      let singleCourses = [];\n      let groups = [];\n\n      for (let i = 0; i < courses.length; i++) {\n        if (!isArray(courses[i])) {\n          singleCourses.push(courses[i]);\n        } else {\n          groups.push(courses[i]);\n        }\n      }\n\n      for (let i = 0; i < singleCourses.length; i++) {\n        for (let j = 0; j < userCourses.length; j++) {\n          if (singleCourses[i]['Course'] === userCourses[j]['Course']['Course']) {\n            unitsTaken += singleCourses[i]['Units'];\n          }\n        }\n      }\n\n      let groupUnits = [];\n\n      for (let i = 0; i < groups.length; i++) {\n        let curGroupUnits = [0, 0];\n\n        for (let j = 0; j < groups[i].length; j++) {\n          for (let k = 0; k < userCourses.length; k++) {\n            if (userCourses[k]['Course']['Course'] === groups[i][j]['Course']) {\n              curGroupUnits.push(groups[i][j]['Units']);\n            }\n          }\n        }\n\n        let total = curGroupUnits.reduce(getSum);\n        groupUnits.push(total);\n      }\n\n      let maxGroupUnits = [0];\n\n      for (let i = 0; i < groupUnits.length; i++) {\n        if (groupUnits[i] > maxGroupUnits[maxGroupUnits.length - 1]) {\n          maxGroupUnits.push(groupUnits[i]);\n        }\n      }\n\n      if (maxGroupUnits[maxGroupUnits.length - 1] > unitsTaken) {\n        unitsTaken = maxGroupUnits[maxGroupUnits.length - 1];\n      }\n\n      if (unitsTaken > requirement['Minimum Units']) {\n        return requirement['Minimum Units'];\n      } else {\n        return unitsTaken;\n      }\n    } else {\n      var groups = courses[1];\n\n      for (let i = 0; i < groups.length; i++) {\n        for (let j = 0; j < groups[i][1].length; j++) {\n          for (let k = 0; k < userCourses.length; k++) {\n            if (groups[i][1][j]['Course'] === userCourses[k]['Course']['Course']) {\n              unitsTaken = +groups[i][1][j]['Units'];\n            }\n          }\n        }\n      }\n\n      if (unitsTaken > requirement['Minimum Units']) {\n        return requirement['Minimum Units'];\n      } else {\n        return unitsTaken;\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"container\", {\n      className: \"TotalProgress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"totProg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"PROGRESS:\"), React.createElement(ProgressBar, {\n      className: \"TotalProgressBar\",\n      now: this.props.progress,\n      label: \"\".concat(this.props.progress, \"%\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"Category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      className: \"CategoryDropdown\",\n      onToggle: () => this.toggleDropdown(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      className: \"CategoryToggle\",\n      id: \"DropdownToggle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, this.state.selectedCategory), React.createElement(Dropdown.Menu, {\n      className: \"DropdownMenu\",\n      alignRight: true,\n      style: this.state.show ? {} : {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, this.state.categories.map((category, index) => {\n      if (category !== this.state.selectedCategory) {\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, React.createElement(Dropdown.Item, {\n          onClick: () => this.handleClick(category),\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, category));\n      }\n    })), React.createElement(\"span\", {\n      className: \"CategoryProgress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, this.findCategoryProgress(this.state.selectedCategory, this.state.selectedCatNum), \"% Complete\"))), React.createElement(DivisionList, {\n      shouldUpdate: this.props.shouldUpdate,\n      onUpdate: this.props.onUpdate,\n      key: this.state.selectedCategory,\n      parent: this.state.selectedCategory,\n      data: this.state.dataArray[this.state.selectedCatNum],\n      progress: () => this.updateProgressBar(),\n      selectedPlan: this.state.selectedPlan,\n      planIndex: this.props.planIndex,\n      selectedCategory: this.state.selectedCategory,\n      selectedPlanNum: this.props.selectedPlanNum,\n      renderSemesters: this.props.renderSemesters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"container\", {\n      className: \"LinkToAcademicGuide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, 'See '), React.createElement(\"span\", {\n      className: \"LinkToAcademicGuide_Text\",\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        color: 'white'\n      },\n      href: this.state.dataArray[this.state.selectedCatNum][this.state.selectedCategory]['Link'],\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Berkeley Academic Guide\")), React.createElement(\"span\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, ' for official requirement information.')));\n  }\n\n}\n\nexport default CategoryList;","map":{"version":3,"sources":["/Users/quinndarling/Desktop/beartracks-1.0/src/Components/CategoryListComponent/CategoryList.js"],"names":["React","Component","DivisionList","user","Dropdown","ProgressBar","Form","getSum","total","num","Math","round","isArray","value","constructor","Array","getCoursesFromSemesters","semesters","courseLists","i","length","push","concat","apply","CategoryList","props","state","selectedCategory","categories","selectedCatNum","dataArray","data","show","selectedPlan","progress","totalProgress","handleClick","bind","toggleDropdown","componentWillReceiveProps","nextProps","setState","indexOf","updateProgressBar","temp","findCategoryProgress","category","numUnits","numCompletedUnits","requirements","completed","k","autoCompleted","findUnitsTakeninRequirement","floor","requirement","userCourses","unitsTaken","courses","singleCourses","groups","j","groupUnits","curGroupUnits","reduce","maxGroupUnits","render","display","map","index","shouldUpdate","onUpdate","planIndex","selectedPlanNum","renderSemesters","color"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport DivisionList from '../DivisionListComponent/DivisionList';\nimport user from '../../UserPlans/User';\nimport { Dropdown } from 'react-bootstrap';\nimport { ProgressBar } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\n\nfunction getSum(total, num) {\n    return total + Math.round(num);\n}\n\nfunction isArray(value) {\n    return value && typeof value === 'object' && value.constructor === Array;\n}\n\nfunction getCoursesFromSemesters(semesters) {\n    var courseLists = [];\n    for (let i = 0; i < semesters.length; i++) {\n        courseLists.push(semesters[i][1])\n    }\n    return ([].concat.apply([], courseLists))\n}\n \nclass CategoryList extends Component {\n    constructor(props) { \n        super(props);\n        //the following categories are guaranteed for every user\n        //need to add in university later \n        this.state = {\n            selectedCategory: this.props.categories[0],\n            selectedCatNum: 0,\n            categories: this.props.categories,\n            dataArray: this.props.data,\n            show: false,\n            selectedPlan: this.props.selectedPlan,\n            progress: this.props.selectedPlan.totalProgress()\n\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.toggleDropdown = this.toggleDropdown.bind(this);\n        this.componentWillReceiveProps = this.componentWillReceiveProps.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.state.selectedPlan !== nextProps.selectedPlan || this.state.categories[this.state.selectedCatNum] !== nextProps.categories[this.state.selectedCatNum]) {\n            this.setState({\n                selectedCategory: nextProps.categories[0],\n                selectedCatNum: 0\n            })\n        }\n        this.setState({ \n            selectedPlan: nextProps.selectedPlan,\n            progress: nextProps.selectedPlan['totalProgress'](),\n            categories: nextProps.categories,\n            dataArray: nextProps.data\n            });  \n      }\n \n    handleClick(i) {\n        //Called when a category is selected from the dropdown menu\n        this.setState({\n            selectedCategory: i,\n            selectedCatNum: this.state.categories.indexOf(i),\n            show: true\n        })\n    }\n\n    updateProgressBar() {\n        var temp = this.state.selectedPlan.totalProgress();\n        this.setState({\n            progress: temp,\n        })\n    }\n\n    toggleDropdown() {\n        this.setState({\n            show: !this.state.show\n        })\n    }\n\n    findCategoryProgress(category, num) {\n        var numUnits = 0;\n        var numCompletedUnits = 0;\n        var requirements = this.state.dataArray[num][category]['Requirements']\n            for (var i = 0; i < requirements.length; i++) {\n                var completed = []\n                for (let k = 0; k < this.state.selectedPlan.autoCompleted.length; k++) {\n                    if(this.state.selectedPlan.autoCompleted[k][0] === category && this.state.selectedPlan.autoCompleted[k][1] === requirements[i]['Requirement']) {\n                        completed.push('true')\n                    }\n                }\n                if (completed.length===0) {\n                    var numCompletedUnits = numCompletedUnits + this.findUnitsTakeninRequirement(requirements[i])}\n                else {var numCompletedUnits = numCompletedUnits + requirements[i]['Minimum Units']}\n                numUnits += requirements[i]['Minimum Units'];\n            }\n        return Math.floor((numCompletedUnits / numUnits) * 100);\n    }\n\n    findUnitsTakeninRequirement(requirement) {\n        let userCourses = getCoursesFromSemesters(this.state.selectedPlan.semesters)\n        let unitsTaken = 0;\n        var courses = requirement['Course']\n        if (courses[0] !== 'departmentsubgroup') {\n\n            let singleCourses = [];\n            let groups = [];\n    \n            for (let i = 0; i < courses.length; i++) {\n                if (!isArray(courses[i])) {\n                    singleCourses.push(courses[i])\n                } else {\n                    groups.push(courses[i])\n                }\n            }\n\n        for (let i = 0; i < singleCourses.length; i++) {\n            for (let j = 0; j < userCourses.length; j++) {\n                if (singleCourses[i]['Course'] === userCourses[j]['Course']['Course']) {\n                    unitsTaken += singleCourses[i]['Units'];\n                }\n            }\n        }\n\n        let groupUnits = [];\n        for (let i = 0; i < groups.length; i++) {\n            let curGroupUnits = [0,0]\n            for (let j = 0; j < groups[i].length; j++) {\n                for (let k = 0; k < userCourses.length; k++) {\n                    if (userCourses[k]['Course']['Course'] === groups[i][j]['Course']) {\n                        curGroupUnits.push(groups[i][j]['Units'])\n                    }\n                }\n            }\n            let total = curGroupUnits.reduce(getSum);\n            groupUnits.push(total);\n        }\n    \n        let maxGroupUnits = [0];\n        for (let i = 0; i < groupUnits.length; i++) {\n            if (groupUnits[i] > maxGroupUnits[maxGroupUnits.length -1]) {\n                maxGroupUnits.push(groupUnits[i])\n            }\n        }\n        if (maxGroupUnits[maxGroupUnits.length -1] > unitsTaken) {\n            unitsTaken = maxGroupUnits[maxGroupUnits.length -1]\n        }\n\n        if (unitsTaken > requirement['Minimum Units']) {\n            return requirement['Minimum Units']\n        } else {\n            return unitsTaken;\n        }\n\n        } else {\n            var groups = courses[1];\n            for (let i = 0; i < groups.length; i++) {\n                for (let j = 0; j < groups[i][1].length; j++) {\n                    for (let k = 0; k < userCourses.length; k++) {\n                        if (groups[i][1][j]['Course'] === userCourses[k]['Course']['Course']) {\n                            unitsTaken =+ groups[i][1][j]['Units']\n                        }\n                    }\n                }\n            }\n            if (unitsTaken > requirement['Minimum Units']) {\n                return requirement['Minimum Units']\n            } else {\n                return unitsTaken;\n            }\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <container className=\"TotalProgress\">\n                    <span className='totProg'>\n                        PROGRESS:\n                    </span>\n                    <ProgressBar className = 'TotalProgressBar' now={this.props.progress} label = {`${this.props.progress}%`} />\n                </container>\n                <div className = 'Category'>\n                    <Dropdown className=\"CategoryDropdown\" onToggle = {() => this.toggleDropdown()}>\n                        <Dropdown.Toggle className=\"CategoryToggle\" id = 'DropdownToggle'>\n                        {this.state.selectedCategory}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className = \"DropdownMenu\" alignRight = {true} style = {this.state.show? {} : {display: 'none'}}>\n                        {this.state.categories.map((category, index) => {\n                                if (category !== this.state.selectedCategory) {\n                                    return <div key={index}>\n                                                <Dropdown.Item onClick = {() => this.handleClick(category)}  key = {index}>\n                                                    {category}\n                                                </Dropdown.Item>\n                                            </div>\n                                }\n                            })}\n                        </Dropdown.Menu>\n                        <span className = 'CategoryProgress'>\n                            {this.findCategoryProgress(this.state.selectedCategory, this.state.selectedCatNum)}% Complete\n                        </span>\n                    </Dropdown>\n                </div>\n                {/* <div className=\"categoryProgress\">\n                   \n                </div> */}\n                <DivisionList \n                    shouldUpdate = {this.props.shouldUpdate}\n                    onUpdate = {this.props.onUpdate}\n                    key={this.state.selectedCategory}\n                    parent={this.state.selectedCategory}\n                    data={this.state.dataArray[this.state.selectedCatNum]}\n                    progress= {() => this.updateProgressBar()}\n                    selectedPlan ={this.state.selectedPlan}\n                    planIndex = {this.props.planIndex}\n                    selectedCategory = {this.state.selectedCategory}\n                    selectedPlanNum = {this.props.selectedPlanNum}\n                    renderSemesters = {this.props.renderSemesters}\n                />\n                <container className = 'LinkToAcademicGuide'>\n                    <span style = {{color: 'white'}}>{'See '}</span>\n                    <span className = 'LinkToAcademicGuide_Text' style = {{color: 'white'}}>\n                        < a style = {{color: 'white'}} href = {this.state.dataArray[this.state.selectedCatNum][this.state.selectedCategory]['Link']} target = '_blank'>\n                            Berkeley Academic Guide \n                        </a>\n                    </span>\n                    <span style = {{color: 'white'}}>\n                        {' for official requirement information.'}\n                    </span>\n                </container>\n            </>\n        )\n        }\n    }\n\n    export default CategoryList;"]},"metadata":{},"sourceType":"module"}