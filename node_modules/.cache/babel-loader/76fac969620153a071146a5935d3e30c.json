{"ast":null,"code":"var _jsxFileName = \"/Users/quinndarling/Desktop/BearTracks/src/Components/FourYearPlan/FourYearPlan.js\";\nimport React, { Component } from 'react';\nimport Semester from '../Semester/Semester';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport user from '../../UserPlans/User';\nimport { thisExpression } from '@babel/types'; //makes a list of semester dates such as fall 2017 based on start and end\n\nfunction generateDates(start, end) {\n  let listDates = [start];\n  const splitStart = start.split(\" \");\n  let currSeason = splitStart[0];\n  let currYear = parseInt(splitStart[1], 10);\n  const splitEnd = end.split(\" \");\n  const endSeason = splitEnd[0];\n  const endYear = parseInt(splitEnd[1], 10);\n  var i = 0;\n\n  while (i < 20) {\n    if (currSeason === endSeason && currYear === endYear) {\n      break;\n    }\n\n    if (currSeason === 'Spring') {\n      currSeason = 'Fall';\n    } else {\n      currSeason = 'Spring';\n      currYear++;\n    }\n\n    listDates.push(currSeason + ' ' + currYear.toString());\n    i++;\n  }\n\n  return listDates;\n}\n\nclass FourYearPlan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // semDates: this.props.semDates,\n      semesters: this.props.semesters,\n      selectedPlan: this.props.selectedPlan,\n      semestersShouldUpdate: this.props.semestersShouldUpdate\n    };\n    this.removeSemester = this.removeSemester.bind(this);\n    this.componentWillReceiveProps = this.componentWillReceiveProps.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      semesters: nextProps.semesters,\n      selectedPlan: nextProps.selectedPlan\n    });\n  }\n\n  removeSemester(date) {\n    const semCopy = this.state.semesters.slice();\n\n    for (let i = 0; i < this.state.semesters.length; i++) {\n      if (this.state.semesters[i][0] === date) {\n        semCopy.splice(i, 1);\n      }\n    }\n\n    this.state.selectedPlan.semesters = semCopy;\n    this.setState({\n      semesters: semCopy\n    });\n    this.props.onDelete();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"FourYearPlan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SemesterContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.semesters.map((semester, index) => {\n      return React.createElement(Semester, {\n        onDelete: this.props.onDelete,\n        planIndex: this.props.planIndex,\n        removeSemester: () => this.removeSemester(semester[0]),\n        key: semester,\n        date: semester[0],\n        courses: semester[1],\n        semNum: index,\n        selectedPlan: this.props.selectedPlan,\n        selectedPlanNum: this.props.planIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default FourYearPlan;","map":{"version":3,"sources":["/Users/quinndarling/Desktop/BearTracks/src/Components/FourYearPlan/FourYearPlan.js"],"names":["React","Component","Semester","Navbar","Nav","user","thisExpression","generateDates","start","end","listDates","splitStart","split","currSeason","currYear","parseInt","splitEnd","endSeason","endYear","i","push","toString","FourYearPlan","constructor","props","state","semesters","selectedPlan","semestersShouldUpdate","removeSemester","bind","componentWillReceiveProps","nextProps","setState","date","semCopy","slice","length","splice","onDelete","render","map","semester","index","planIndex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Semester from '../Semester/Semester';\nimport { Navbar, Nav } from 'react-bootstrap'\nimport user from '../../UserPlans/User';\nimport { thisExpression } from '@babel/types';\n\n\n//makes a list of semester dates such as fall 2017 based on start and end\nfunction generateDates(start, end) {\n    let listDates = [start];\n    const splitStart = start.split(\" \");\n    let currSeason =  splitStart[0];\n    let currYear = parseInt(splitStart[1], 10);\n    const splitEnd = end.split(\" \");\n    const endSeason = splitEnd[0];\n    const endYear = parseInt(splitEnd[1], 10);\n    var i = 0;\n    while (i < 20) {\n        if (currSeason === (endSeason) && currYear === endYear) {\n            break; \n        }\n        if (currSeason === 'Spring') {\n            currSeason = 'Fall';\n        } else {\n            currSeason = 'Spring';\n            currYear++;\n        }\n        listDates.push(currSeason + ' ' + currYear.toString());\n        i++;\n    }\n    return listDates\n}\n\nclass FourYearPlan extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // semDates: this.props.semDates,\n            semesters: this.props.semesters,\n            selectedPlan: this.props.selectedPlan,\n            semestersShouldUpdate: this.props.semestersShouldUpdate\n        }\n        this.removeSemester = this.removeSemester.bind(this);\n        this.componentWillReceiveProps = this.componentWillReceiveProps.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({ semesters: nextProps.semesters,\n                        selectedPlan: nextProps.selectedPlan });  \n      } \n      \n\n    removeSemester(date) {\n        const semCopy = this.state.semesters.slice()\n        for(let i = 0; i < this.state.semesters.length; i++) {\n            if (this.state.semesters[i][0]===date) {\n                semCopy.splice(i, 1)\n            }\n        }\n        this.state.selectedPlan.semesters = semCopy;\n        this.setState({\n            semesters: semCopy\n        })\n        this.props.onDelete();\n    }\n        \n        render() {\n            return (\n                <div className = \"FourYearPlan\">\n                    <div className = \"SemesterContainer\">\n                        {this.state.semesters.map((semester, index)=>\n                        {return <Semester \n                                onDelete = {this.props.onDelete} \n                                planIndex = {this.props.planIndex}\n                                removeSemester = {() => this.removeSemester(semester[0])} \n                                key = {semester} \n                                date = {semester[0]}\n                                courses = {semester[1]}\n                                semNum = {index}\n                                selectedPlan = {this.props.selectedPlan}\n                                selectedPlanNum = {this.props.planIndex}/>\n                        })}\n                    </div>\n                </div>\n            )\n        }\n}\n\nexport default FourYearPlan;"]},"metadata":{},"sourceType":"module"}