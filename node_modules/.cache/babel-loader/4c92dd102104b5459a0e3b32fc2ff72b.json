{"ast":null,"code":"var _jsxFileName = \"/Users/quinndarling/Desktop/BearTracks/src/Components/CourseButtonComponent/CourseButton.js\";\nimport React, { Component } from 'react';\nimport { DragSource } from 'react-dnd';\nimport { Card, Collapse } from 'react-bootstrap';\nimport { findDOMNode } from 'react-dom'; // // import { Accordion, AccordionToggle, AccordionCollapse } from 'react-bootstrap';\n// import callAPI from '../../pages/apiCall';\n\nconst courseButtonSource = {\n  beginDrag(props) {\n    var course = props.Course;\n    return {\n      'Course': course\n    };\n    /* returns course in the form of: {'Course': { 'Course': COMPSCI C100,\n                                                    'Units': ...,\n                                                    'Title: ...,\n                                                    'Desc': ... }}]*/\n  },\n\n  endDrag(props, monitor, component) {\n    return props.handleDrop();\n  }\n\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging()\n  };\n} // function callAPI() {\n//     const fetch = require(\"node-fetch\");\n//     const apiData = {\n//     url: 'https://berkeleytime.com/api/catalog_json/course_box/?course_id=',\n//     id: 6426,\n// }\n// const {url, id} = apiData\n// const apiUrl = `${url}${id}`\n// fetch(apiUrl)\n//         .then(data => {\n//             if(data.ok){\n//             return data.text()\n//             }\n//             throw new Error('Oops! Something went wrong.'); \n//         })\n//         .then((text)=>text.length? JSON.parse(text) : {})\n//         .catch( error => console.error('Error:', error))\n//         .then(courseBox => getCourseDescription(courseBox))\n//         const getCourseDescription = (data) => {\n//             console.log(data.course)\n//         }\n//     }\n\n\nclass CourseButton extends Component {\n  render() {\n    const _this$props = this.props,\n          isDragging = _this$props.isDragging,\n          hovered = _this$props.hovered,\n          connectDragSource = _this$props.connectDragSource,\n          Course = _this$props.Course;\n    const opacity = isDragging ? {\n      opacity: .5\n    } : {}; // const course = callAPI(this.props.Course);\n\n    return React.createElement(Card, {\n      className: \"CourseButton\",\n      border: \"primary\",\n      ref: instance => {\n        const node = findDOMNode(instance);\n        connectDragSource(node);\n      },\n      onClick: () => this.props.handleClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      className: \"CourseButtonHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.props.Course['Course'], \": \", this.props.Course['Title'], \" (\", this.props.Course['Units'], \" units)\", this.props.overlapping.length > 0 && React.createElement(\"img\", {\n      className: \"OverlapAlertIcon\",\n      src: require(\"../../Images/overlapAlert.png\"),\n      height: \"20\",\n      width: \"20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(Collapse, {\n      in: this.props.isSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      className: \"CourseDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, this.props.Course['Desc'] && React.createElement(\"div\", {\n      className: \"DescDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"DescHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" DESCRIPTION \"), React.createElement(\"p\", {\n      className: \"CourseDescBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.props.Course['Desc'])), this.props.Course['Terms'] && React.createElement(\"div\", {\n      className: \"TermDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"TermHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"TERMS OFFERED\"), React.createElement(\"p\", {\n      className: \"CourseTerms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \" \", Course['Terms'], \" \")), this.props.Course['Pres'] && React.createElement(\"div\", {\n      className: \"PresDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"PresHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \" PREREQUISITES \"), React.createElement(\"p\", {\n      className: \"CoursePres\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" \", Course['Pres'], \" \")), this.props.overlapping.length > 0 && React.createElement(\"div\", {\n      className: \"OverlapDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"OverlapHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"OTHER REQUIREMENTS SATISFIED\"), this.props.overlapping.map((requirment, index) => React.createElement(\"p\", {\n      className: \"OverlappingReqs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, requirment)))))));\n  }\n\n}\n\nexport default DragSource(\"Course\", courseButtonSource, collect)(CourseButton);","map":{"version":3,"sources":["/Users/quinndarling/Desktop/BearTracks/src/Components/CourseButtonComponent/CourseButton.js"],"names":["React","Component","DragSource","Card","Collapse","findDOMNode","courseButtonSource","beginDrag","props","course","Course","endDrag","monitor","component","handleDrop","collect","connect","connectDragSource","dragSource","connectDragPreview","dragPreview","isDragging","CourseButton","render","hovered","opacity","instance","node","handleClick","overlapping","length","require","isSelected","map","requirment","index"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { DragSource } from 'react-dnd';\nimport { Card, Collapse } from 'react-bootstrap';\nimport { findDOMNode } from 'react-dom';\n// // import { Accordion, AccordionToggle, AccordionCollapse } from 'react-bootstrap';\n// import callAPI from '../../pages/apiCall';\n \nconst courseButtonSource = {\n    beginDrag(props) {\n        var course = props.Course;\n        return {'Course': course};\n        /* returns course in the form of: {'Course': { 'Course': COMPSCI C100,\n                                                        'Units': ...,\n                                                        'Title: ...,\n                                                        'Desc': ... }}]*/\n    },\n\n    endDrag(props, monitor, component) {\n        return props.handleDrop();\n    }\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDragSource: connect.dragSource(),\n        connectDragPreview: connect.dragPreview(),\n        isDragging: monitor.isDragging(), \n    }\n}\n\n// function callAPI() {\n//     const fetch = require(\"node-fetch\");\n//     const apiData = {\n//     url: 'https://berkeleytime.com/api/catalog_json/course_box/?course_id=',\n//     id: 6426,\n// }\n\n// const {url, id} = apiData\n\n// const apiUrl = `${url}${id}`\n\n// fetch(apiUrl)\n//         .then(data => {\n//             if(data.ok){\n                \n//             return data.text()\n//             }\n//             throw new Error('Oops! Something went wrong.'); \n//         })\n//         .then((text)=>text.length? JSON.parse(text) : {})\n//         .catch( error => console.error('Error:', error))\n//         .then(courseBox => getCourseDescription(courseBox))\n\n//         const getCourseDescription = (data) => {\n//             console.log(data.course)\n//         }\n//     }\n\nclass CourseButton extends Component {\n    render() {\n        const { isDragging, hovered, connectDragSource, Course } = this.props;\n        const opacity = isDragging ? {opacity: .5} : {};\n        // const course = callAPI(this.props.Course);\n        return (\n            <Card className=\"CourseButton\" border='primary'\n                ref={instance => {\n                const node = findDOMNode(instance);\n                connectDragSource(node);\n                }}\n                onClick = {()=> this.props.handleClick()}>\n                <Card.Header  className=\"CourseButtonHeader\" >\n                    {this.props.Course['Course']}: {this.props.Course['Title']} ({this.props.Course['Units']} units)\n                    {(this.props.overlapping.length > 0) &&\n                    <img className = 'OverlapAlertIcon' src={require(\"../../Images/overlapAlert.png\")} height=\"20\" width=\"20\"/>}\n                </Card.Header>\n                <Collapse in={this.props.isSelected}>\n                <Card.Body className='CourseDescription'>\n                    <>\n                    {this.props.Course['Desc'] && \n                    <div className = \"DescDiv\">\n                    <h1 className = 'DescHeader'> DESCRIPTION </h1>\n                    <p className='CourseDescBody'>\n                        {this.props.Course['Desc']}\n                     </p>\n                     </div>\n                    }\n                    {this.props.Course['Terms'] && \n                    <div className = \"TermDiv\">\n                    <h1 className = 'TermHeader'>TERMS OFFERED</h1>\n                    <p className = 'CourseTerms'> {Course['Terms']} </p>\n                    </div>\n                    }\n                    {this.props.Course['Pres'] && \n                    <div className = \"PresDiv\">\n                    <h1 className = 'PresHeader'> PREREQUISITES </h1>\n                    <p className = 'CoursePres'> {Course['Pres']} </p>\n                    </div>\n                    }\n                    {(this.props.overlapping.length > 0) &&\n                    <div className = \"OverlapDiv\">\n                    <h1 className = 'OverlapHeader'>OTHER REQUIREMENTS SATISFIED</h1>\n                    {this.props.overlapping.map((requirment, index) => \n                    <p className = 'OverlappingReqs'>{requirment}</p>)}\n                    </div>}\n                    </>\n                </Card.Body>\n                </Collapse>\n            </Card>\n        )\n    }\n}\n\n    export default DragSource(\"Course\", courseButtonSource, collect)(CourseButton);"]},"metadata":{},"sourceType":"module"}