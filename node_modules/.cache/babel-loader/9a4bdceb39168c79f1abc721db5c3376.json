{"ast":null,"code":"var _jsxFileName = \"/Users/quinndarling/Desktop/BearTracks/src/Components/Semester/Semester.js\";\nimport React, { Component } from 'react';\nimport { DropTarget } from 'react-dnd';\nimport CoursePlan from '../CoursePlan/CoursePlan.js';\nimport { removeCustomCourse } from '../../UserPlans/User';\nimport { Card, Button, Dropdown } from 'react-bootstrap';\nimport { findDOMNode } from 'react-dom';\n\nfunction collect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    hovered: monitor.isOver(),\n    Course: monitor.getItem()\n  };\n}\n\nconst targetSpec = {\n  drop(props, monitor, component) {\n    if (component.checkCanDrop(monitor.getItem())) {\n      component.handleDrop(monitor.getItem());\n    }\n\n    ;\n  }\n\n};\n\nfunction calculateUnits(courses) {\n  var sum = [0, 0];\n\n  for (let i = 0; i < courses.length; i++) {\n    sum.push(courses[i]['Course']['Units']);\n  }\n\n  return sum.reduce(getSum);\n}\n\nfunction getSum(total, num) {\n  return total + Math.round(num);\n}\n\nfunction getCorrectIndex(date) {\n  return date.semDate === this.props.semDate;\n}\n\nclass Semester extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteDraggedCourse = course => {\n      var index = null;\n      const userSemCopy = this.state.selectedPlan.semesters.slice();\n\n      for (var i = this.state.courses.length - 1; i >= 0; i--) {\n        if (this.state.courses[i]['Course'] === course['Course']) {\n          index = i;\n\n          for (let j = 0; j < userSemCopy.length; j++) {\n            if (userSemCopy[j][0] === this.props.date) {\n              this.state.selectedPlan.semesters[j][1].splice(i, 1);\n            }\n          }\n\n          break;\n        }\n      }\n\n      const courses = [];\n\n      for (var i = 0; i < this.state.courses.length; i++) {\n        if (i !== index) {\n          courses.push(this.state.courses[i]);\n        }\n      }\n\n      this.setState({\n        courses: courses,\n        unitCount: this.state.unitCount - course[\"Units\"]\n      });\n    };\n\n    this.state = {\n      courses: this.props.courses,\n      unitCount: calculateUnits(this.props.courses),\n      shouldUpdate: this.props.shouldUpdate,\n      hovering: false,\n      selectedPlan: this.props.selectedPlan\n    };\n    this.handleDrop = this.handleDrop.bind(this);\n    this.deleteCourse = this.deleteCourse.bind(this);\n    this.toggleHoverOn = this.toggleHoverOn.bind(this);\n    this.toggleHoverOff = this.toggleHoverOff.bind(this);\n    this.componentWillReceiveProps = this.componentWillReceiveProps.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      selectedPlan: nextProps.selectedPlan,\n      shouldUpdate: nextProps.shouldUpdate,\n      courses: nextProps.courses,\n      unitCount: calculateUnits(nextProps.courses)\n    });\n  }\n\n  checkSameSemester(rootSem) {\n    return this.props.numSem === rootSem;\n  }\n\n  concatUserSems() {\n    var userSemCopy = this.state.selectedPlan.semesters.slice();\n    return [].concat.apply([], userSemCopy);\n  }\n\n  deleteCourse(course) {\n    for (let i = 0; i < this.state.selectedPlan.semesters.length; i++) {\n      if (this.state.selectedPlan.semesters[i][0] === this.props.date) {\n        for (let j = 0; j < this.state.selectedPlan.semesters[i][1].length; j++) {\n          if (this.state.selectedPlan.semesters[i][1][j] === course) {\n            this.state.selectedPlan.semesters[i][1].splice(j, 1);\n          }\n        }\n      }\n    }\n\n    if (course['Course']['Title'] === 'Custom Course') {\n      removeCustomCourse(course['Course']['Course'], this.props.selectedPlanNum);\n    } // var coursesCopy = this.state.courses;\n    // var filtered = coursesCopy.filter(a => a['Course'] !== course['Course']);\n    // this.setState({\n    //     courses: filtered,\n    //     unitCount: this.state.unitCount - course[\"Units\"]\n    // })\n    // var userSemCopy = this.state.selectedPlan.semesters[this.props.semNum].slice();\n    // var index;\n    // for (let i = 0; i < userSemCopy.length; i++) {\n    //     if (userSemCopy[i]['Course'] === [\"Course\"]) {\n    //         index = i;\n    //     }\n    // }\n    // userSemCopy.splice(index,1);\n    // plans[this.props.planIndex].semesters[this.props.semNum] = userSemCopy;\n\n\n    this.props.onDelete();\n  }\n\n  checkCanDrop(droppedCourse) {\n    for (let i = 0; i < this.state.courses.length; i++) {\n      if (this.state.courses[i][\"RootSem\"] === droppedCourse[\"RootSem\"] && this.state.courses[i]['Course'][\"Course\"] === droppedCourse['Course'][\"Course\"]) {\n        return true;\n      }\n\n      if (this.state.courses[i]['Course'][\"Course\"] === droppedCourse['Course'][\"Course\"]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  handleDrop(droppedCourse) {\n    /* receives course in the following form: {'Course' : {'Course': COMPSCI C100,\n                                                        'Units': ...,\n                                                         'Title: ...,\n                                                         'Desc': ... }}]*/\n    this.setState(prevState => ({\n      courses: [...prevState.courses, droppedCourse],\n      unitCount: this.state.unitCount + droppedCourse['Course']['Units']\n    })); //the following code updates the user object\n\n    let userSemCopy = this.state.selectedPlan.semesters.slice();\n\n    for (let i = 0; i < userSemCopy.length; i++) {\n      if (userSemCopy[i][0] === this.props.date) {\n        this.props.selectedPlan.semesters[i][1].push(droppedCourse);\n      }\n    } // const thisSem = userSemCopy[this.props.semNum].slice();\n    // thisSem.push(droppedCourse);\n    // userSemCopy[this.props.semNum] = thisSem;\n    // this.props.selectedPlan.semesters = userSemCopy\n\n    /*semesters get info in form of /*{courseInfo: {'Course': COMPSCI C100,\n                                                    'Units: ...,\n                                                    'Title': ...,\n                                                    'Desc': ...}}*/\n\n  }\n\n  toggleHoverOn() {\n    this.setState({\n      hovering: true\n    });\n  }\n\n  toggleHoverOff() {\n    this.setState({\n      hovering: false\n    });\n  }\n\n  calcWidth() {\n    if (this.state.selectedPlan.semesters.length > 10) {\n      return '15.75%';\n    }\n\n    if (this.state.selectedPlan.semesters.length > 8) {\n      return '19%';\n    }\n\n    return '24%';\n  }\n\n  render() {\n    const _this$props = this.props,\n          connectDropTarget = _this$props.connectDropTarget,\n          hovered = _this$props.hovered,\n          Course = _this$props.Course;\n    const backgroundColor = hovered ? 'lightgrey' : 'white';\n    return React.createElement(Card, {\n      className: \"SemesterCard\",\n      bg: \"light\",\n      variant: \"light\",\n      ref: instance => {\n        const node = findDOMNode(instance);\n        connectDropTarget(node);\n      },\n      style: {\n        width: this.calcWidth()\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      className: \"SemesterHeader\",\n      onMouseEnter: () => this.toggleHoverOn(),\n      onMouseLeave: () => this.toggleHoverOff(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      className: \"SemDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \" \", this.props.date.toUpperCase(), \" \"), this.state.hovering && React.createElement(\"img\", {\n      className: \"deleteSemesterButton\",\n      onClick: () => this.props.removeSemester(),\n      src: require(\"../../Images/x.png\"),\n      height: \"15\",\n      width: \"15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }))), React.createElement(Card.Body, {\n      className: \"CourseTarget\",\n      style: {\n        background: backgroundColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, this.state.courses.map((course, index) => {\n      course[\"RootSem\"] = this.props.semNum;\n      return React.createElement(CoursePlan, {\n        key: course['Course'][\"Course\"] + ' ' + this.props.date,\n        handleDropOut: course => this.deleteDraggedCourse(course),\n        Course: course,\n        semNum: this.props.semNum,\n        number: course['Course'][\"Course\"],\n        units: course['Course'][\"Units\"],\n        title: course['Course']['Title'],\n        description: course['Course']['Desc'],\n        deleteCourse: () => this.deleteCourse(course),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      });\n    })), React.createElement(Card.Footer, {\n      className: \"SemesterFooter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"unitCount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Total Units: \"), React.createElement(\"h1\", {\n      className: \"unitNum\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \" \", this.state.unitCount)));\n  }\n\n}\n\nexport default DropTarget(\"Course\", targetSpec, collect)(Semester);","map":{"version":3,"sources":["/Users/quinndarling/Desktop/BearTracks/src/Components/Semester/Semester.js"],"names":["React","Component","DropTarget","CoursePlan","removeCustomCourse","Card","Button","Dropdown","findDOMNode","collect","connect","monitor","connectDropTarget","dropTarget","hovered","isOver","Course","getItem","targetSpec","drop","props","component","checkCanDrop","handleDrop","calculateUnits","courses","sum","i","length","push","reduce","getSum","total","num","Math","round","getCorrectIndex","date","semDate","Semester","constructor","deleteDraggedCourse","course","index","userSemCopy","state","selectedPlan","semesters","slice","j","splice","setState","unitCount","shouldUpdate","hovering","bind","deleteCourse","toggleHoverOn","toggleHoverOff","componentWillReceiveProps","nextProps","checkSameSemester","rootSem","numSem","concatUserSems","concat","apply","selectedPlanNum","onDelete","droppedCourse","prevState","calcWidth","render","backgroundColor","instance","node","width","toUpperCase","removeSemester","require","background","map","semNum"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { DropTarget } from 'react-dnd'\nimport CoursePlan from '../CoursePlan/CoursePlan.js';\nimport {removeCustomCourse} from '../../UserPlans/User';\nimport {Card, Button, Dropdown} from 'react-bootstrap'\nimport { findDOMNode } from 'react-dom';\n\n\nfunction collect(connect, monitor) {\n    return {\n      connectDropTarget: connect.dropTarget(),\n      hovered: monitor.isOver(),\n      Course: monitor.getItem()\n    }\n  }\n\nconst targetSpec = {\n    drop(props, monitor, component) {\n        if(component.checkCanDrop(monitor.getItem())) {\n        component.handleDrop(monitor.getItem());\n    };\n    }\n}\n\nfunction calculateUnits(courses) {\n    var sum = [0, 0];\n    for (let i = 0; i < courses.length; i++) {\n        sum.push(courses[i]['Course']['Units'])\n    }\n    return sum.reduce(getSum)\n}\n\nfunction getSum(total, num) {\n    return total + Math.round(num);\n}\n\nfunction getCorrectIndex(date) {\n    return date.semDate === this.props.semDate;\n}\n\nclass Semester extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            courses: this.props.courses,\n            unitCount: calculateUnits(this.props.courses),\n            shouldUpdate: this.props.shouldUpdate,\n            hovering: false,\n            selectedPlan: this.props.selectedPlan\n        }\n\n        this.handleDrop = this.handleDrop.bind(this);\n        this.deleteCourse = this.deleteCourse.bind(this);\n        this.toggleHoverOn = this.toggleHoverOn.bind(this);\n        this.toggleHoverOff = this.toggleHoverOff.bind(this);\n        this.componentWillReceiveProps = this.componentWillReceiveProps.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({ \n            selectedPlan: nextProps.selectedPlan,\n            shouldUpdate: nextProps.shouldUpdate,\n            courses: nextProps.courses,\n            unitCount: calculateUnits(nextProps.courses)}) \n      }\n\n    checkSameSemester(rootSem) {\n        return this.props.numSem ===rootSem;\n    }\n\n    concatUserSems() {\n        var userSemCopy = this.state.selectedPlan.semesters.slice();\n        return [].concat.apply([], userSemCopy);\n    }\n\n    deleteCourse(course) {\n        for (let i = 0; i < this.state.selectedPlan.semesters.length; i++) {\n            if (this.state.selectedPlan.semesters[i][0]===this.props.date) {\n                for (let j = 0; j < this.state.selectedPlan.semesters[i][1].length; j++) {\n                    if (this.state.selectedPlan.semesters[i][1][j]===course) {\n                        this.state.selectedPlan.semesters[i][1].splice(j, 1)\n                    }\n                }\n            }\n        }\n        if (course['Course']['Title'] === 'Custom Course') {\n            removeCustomCourse(course['Course']['Course'], this.props.selectedPlanNum)\n        }\n\n        // var coursesCopy = this.state.courses;\n        // var filtered = coursesCopy.filter(a => a['Course'] !== course['Course']);\n        // this.setState({\n        //     courses: filtered,\n        //     unitCount: this.state.unitCount - course[\"Units\"]\n        // })\n        // var userSemCopy = this.state.selectedPlan.semesters[this.props.semNum].slice();\n        // var index;\n        // for (let i = 0; i < userSemCopy.length; i++) {\n        //     if (userSemCopy[i]['Course'] === [\"Course\"]) {\n        //         index = i;\n        //     }\n        // }\n        // userSemCopy.splice(index,1);\n        // plans[this.props.planIndex].semesters[this.props.semNum] = userSemCopy;\n        this.props.onDelete();\n    }\n\n    checkCanDrop(droppedCourse) {\n        for(let i = 0; i < this.state.courses.length; i++) {\n            if (this.state.courses[i][\"RootSem\"]===droppedCourse[\"RootSem\"] && this.state.courses[i]['Course'][\"Course\"]===droppedCourse['Course'][\"Course\"]) {\n                return true;\n            }\n            if (this.state.courses[i]['Course'][\"Course\"]===droppedCourse['Course'][\"Course\"])  {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    handleDrop(droppedCourse) {\n        /* receives course in the following form: {'Course' : {'Course': COMPSCI C100,\n                                                            'Units': ...,\n                                                             'Title: ...,\n                                                             'Desc': ... }}]*/\n        this.setState(prevState => ({\n            courses: [...prevState.courses, droppedCourse],\n            unitCount: this.state.unitCount + droppedCourse['Course']['Units']\n          }))\n        //the following code updates the user object\n        let userSemCopy = this.state.selectedPlan.semesters.slice();\n        for(let i = 0; i<userSemCopy.length; i++) {\n            if(userSemCopy[i][0]===this.props.date) {\n                this.props.selectedPlan.semesters[i][1].push(droppedCourse)\n            }\n        }\n        // const thisSem = userSemCopy[this.props.semNum].slice();\n        // thisSem.push(droppedCourse);\n        // userSemCopy[this.props.semNum] = thisSem;\n        // this.props.selectedPlan.semesters = userSemCopy\n        /*semesters get info in form of /*{courseInfo: {'Course': COMPSCI C100,\n                                                        'Units: ...,\n                                                        'Title': ...,\n                                                        'Desc': ...}}*/\n    }\n    \n    deleteDraggedCourse = (course) => { \n        var index = null;\n        const userSemCopy = this.state.selectedPlan.semesters.slice();\n        for(var i = (this.state.courses.length - 1); i >= 0; i--) {\n            if (this.state.courses[i]['Course'] === course['Course']) {\n                index = i;\n                for (let j = 0; j < userSemCopy.length; j++) {\n                    if (userSemCopy[j][0]===this.props.date) {\n                        this.state.selectedPlan.semesters[j][1].splice(i,1)\n                    }\n                }\n                break;\n            }\n        }\n        const courses = []\n        for(var i = 0; i < this.state.courses.length; i++) {\n            if (i!==index) {\n                courses.push(this.state.courses[i])\n            }\n            }\n        this.setState({\n            courses: courses,\n            unitCount: this.state.unitCount - course[\"Units\"]\n        })\n    }\n\n    toggleHoverOn() {\n        this.setState({hovering: true})\n      }\n  \n      toggleHoverOff() {\n        this.setState({hovering: false})\n      }\n\n    calcWidth() {\n        if (this.state.selectedPlan.semesters.length > 10) {\n            return '15.75%'\n        }\n        if (this.state.selectedPlan.semesters.length > 8) {\n            return '19%'\n        }\n        return '24%'\n    }\n\n\n        \n\n    render() {\n        const { connectDropTarget, hovered, Course} = this.props;\n        const backgroundColor = hovered ? 'lightgrey' : 'white';\n        return (\n                <Card className = 'SemesterCard' bg = \"light\" variant = \"light\" ref={instance => {\n                    const node = findDOMNode(instance);\n                    connectDropTarget(node);}}\n                    style = {{width: this.calcWidth()}}>\n                    <Card.Header className=\"SemesterHeader\" onMouseEnter = {() => this.toggleHoverOn()} onMouseLeave = {() => this.toggleHoverOff()}>\n                        <>\n                            <h1 className=\"SemDate\"> {this.props.date.toUpperCase()} </h1>\n                            {this.state.hovering && <img className = 'deleteSemesterButton' onClick = {()=>this.props.removeSemester()} src={require(\"../../Images/x.png\")} height=\"15\" width=\"15\"/>}\n                        </>\n                        \n                    </Card.Header>\n                    <Card.Body className = \"CourseTarget\" style={{ background: backgroundColor}}>\n                        {this.state.courses.map((course, index)=>{\n                            course[\"RootSem\"] = this.props.semNum;\n                                return <CoursePlan \n                                key = {course['Course'][\"Course\"] + ' ' + this.props.date }\n                                handleDropOut= {(course) => this.deleteDraggedCourse(course)}\n                                Course = {course}\n                                semNum = {this.props.semNum}\n                                number = {course['Course'][\"Course\"]} \n                                units = {course['Course'][\"Units\"]}\n                                title = {course['Course']['Title']}\n                                description = {course['Course']['Desc']}\n                                deleteCourse = {() => this.deleteCourse(course)}\n                                />\n                            })}\n                    </Card.Body>\n                    <Card.Footer className = \"SemesterFooter\">\n                        <h1 className='unitCount'>Total Units: </h1>\n                        <h1 className=\"unitNum\"> {this.state.unitCount}</h1>\n                    </Card.Footer>\n                </Card>\n        )\n    }\n} \n\nexport default DropTarget(\"Course\", targetSpec, collect)(Semester);"]},"metadata":{},"sourceType":"module"}